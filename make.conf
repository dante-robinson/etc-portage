# Don't add ${CFLAGS} to ${COMMON_FLAGS} needed for env configs
# -march and -mtune native gives more optimizations than stating arch
# LTO and O3 add to compilation time but make packages faster
COMMON_FLAGS="-march=native -mtune=native -O3 -pipe -fomit-frame-pointer -fno-plt"
CFLAGS="${COMMON_FLAGS} ${CFLAGS}"
CXXFLAGS="${COMMON_FLAGS} ${CFLAGS}"
FCFLAGS="${COMMON_FLAGS} ${CFLAGS}"
FFLAGS="${COMMON_FLAGS} ${CFLAGS}"

LDFLAGS="-march=native -mtune=native -fuse-ld=mold -Wl,-O3,-zrelro,-znow"

RUSTFLAGS="-Ctarget-cpu=native -Copt-level=3 -Clink-arg=-fuse-ld=/usr/bin/mold -Ctarget-feature=-crt-static -Clinker=clang"

# NOTE: This stage was built with the bindist Use flag enabled
PORTDIR=/var/db/repos/gentoo
DISTDIR=/var/cache/distfiles
PKGDIR=/var/cache/binpkgs
# CCACHE used for C and C++
CCACHE_DIR="/var/cache/ccache"
# Enables SCCACHE only for Rust
RUSTC_WRAPPER=/usr/bin/sccache
SCCACHE_DIR=/var/cache/sccache
SCCACHE_MAX_FRAME_LENGTH=104857600
# Custom ebuild directory delete if not making ebuilds harmless error will be thrown if directory doesnt exist
PORTDIR_OVERLAY=/usr/local/portage
EMERGE_DEFAULT_OPTS="--jobs=32 --load-average=32"

FEATURES="ccache parallel-install -ipc-sandbox -pid-sandbox -mount-sandbox -network-sandbox"

# Compile everything with LLVM/Clang only needed on GCC Profiles
#AR="llvm-ar"
#AS="llvm-as"
#CC="clang"
#CPP="clang-cpp"
#CXX="clang++"
#CXXSTDLIB="c++"
#DLLTOOL="llvm-dlltool"
#MT="llvm-mt"
#NM="llvm-nm"
#OBJCOPY="llvm-objcopy"
#OBJDUMP="llvm-objdump"
#RANLIB="llvm-ranlib"
#READELF="llvm-readelf"
#STRIP="llvm-strip"

# -j is total threads in system -l is load average u can set -l to half of -j to use say all cores at 50%
MAKEOPTS="-j32 -l32"
NINJAOPTS="-j32 -l32"
# Ranges from 19 to -19 negative numbers will make it be less important over other tasks 
PORTAGE_NICENESS="0"

# Enable global testing packages add a ~ in front of amd64
ACCEPT_KEYWORDS="amd64"
# You can set this to FREE if you wish and -* and manually enable * for Steam and Linux Firmware if needed
ACCEPT_LICENSE="*"

#Ninja is considerably faster than GNU make and can help build times.
CMAKE_MAKEFILE_GENERATOR="ninja"
L10N="en-US"
VIDEO_CARDS="amdgpu radeonsi"
INPUT_DEVICES="libinput"
# Only change this when updating LLVM + Clang as it will lose symbols to compile
# Fixing it requires reinstalling LLVM will all the old targets you had. Only works on clang-musl overlay profiles
LLVM_TARGETS="X86 AMDGPU"
# Will need to be updated periodically or just removed to install defaults
LUA_TARGETS="luajit lua5-4 lua5-1"
# For building Kernel with LLVM + Clang. Genkernel.conf also needs modified
BUILD_FIXES="LLVM=1 LLVM_IAS=1"

# CPU Dependant
CPU_FLAGS_X86="aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt rdrand sha sse sse2 sse3 sse4_1 sse4_2 sse4a ssse3"

USE="alsa clang custom-cflags ffmpeg gif gles2 gles2-only hardened jpeg libedit minimal openal opus pie pic pulseaudio pdf png sdl seccomp sqlite truetype usb udev v4l vaapi vulkan wayland xml -berkdb -boost -cups -dbus -doc -drm -ftp -gdbm -gnome -gpm -graphite -gstreamer -gtk -gtk-doc -handbook -icu -idn -imap -introspection -jit -jumbo-build -kde -lcms -libnotify -lto -man -nls -opengl -pcre -perl -pipewire -plasma -policykit -qt5 -ruby -screencast -svg -systemd -threads -tiff -vala -vdpau -webkit -wxwidgetsi -xml -X"

# This sets the language of build output to English.
# Please keep this setting intact when reporting bugs.
LC_MESSAGES=C

GRUB_PLATFORMS="efi-64"

GENTOO_MIRRORS="https://mirror.csclub.uwaterloo.ca/gentoo-distfiles/ https://mirrors.rit.edu/gentoo/"
## Sync and Fetch packages through tor
#FETCHCOMMAND="curl --socks5-hostname 127.0.0.1:9050 --retry 3 --connect-timeout 60 -o \"\${DISTDIR}/\${FILE}\" \"\${URI}\""

#RESUMECOMMAND="curl -C - --socks5-hostname 127.0.0.1:9050 --retry 3 --connect-timeout 60 -o \"\${DISTDIR}/\${FILE}\" \"\${URI}\""

SIGNED_OFF_BY="Dante Robinson <danterobinson2000@gmail.com>"
